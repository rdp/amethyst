
# use bash's "time" command to profile :)

def calcFibN(num:RubyObj)
  fib_array = RubyArray.new [RubyInt.new(0), RubyInt.new(1)]
   TimesZeroArgBlockOneArg(ImplementsMinusOneArg(num).___minus RubyInt.new(2)).times do |i|
    # ruby:  fib_array << (fib_array[i] + fib_array[i+1])
    # a bit ugly, but this is how it'll turnout/look in the end...in theory muhahaha...
    ImplementsLessThanLessThanOneArg(fib_array).lessThanLessThan(ImplementsPlusOneArg(fib_array[i]).___plus fib_array[ImplementsPlusOneArg(i).___plus RubyInt.new(1)])
  end
  # puts fib_array
end

thirty = RubyInt.new(30)

3_000_000.times {
  calcFibN(thirty)
}

puts 'profile done'
